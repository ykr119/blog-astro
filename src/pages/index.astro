---
import Layout from '../layouts/BaseLayout.astro';
import PostList from '../components/PostList.astro';
const pageTitle = "Yukari.K"

---
<Layout title="Welcome to Astro.">
	<main>
		<h1>
			<span class="ttl">{pageTitle}</span>
		</h1>
		<section id="code" class="section-code">
			<div class="wrapper">
				<h2 class="js-fadein">
					<span>Code List</span>
				</h2>
				<p class="js-fadein">
					<span>案件等で使用したコードを随時投稿しています。<br>会社の都合で案件自体をポートフォリオとして公開することが難しいため、<br>このような形で自分で書いたコードをまとめ始めました。目標：1日1件投稿。<br>(基本的にはPCで見ることを想定しています)</span>
				</p>
				<PostList />
			</div>
		</section>
		<!-- <div class="block">
		</div> -->
		<section id="about" class="section-about">
			<div class="wrapper">
				<div class="section-about__container">
					<h2>
						<div class="js-fadein">
							<span>About</span>
						</div>
						<div data-order="2">
							<span>Me</span>
						</div>
					</h2>
					<div>
						<section>
							<h3>Career</h3>
							<p>デジタルハリウッド卒業にてWebデザインを学び、エンジニアとして転職。<br>現在会社員として日々奮闘中です。<br>直近1年間で約40件の案件の実装を行いました。(HTML,CSS,JavaScript,WordPress)</p>
							<a href="https://yukari-k-web.com/" target="_blank">スクールの卒業制作として作ったポートフォリオ</a>
						</section>
						<section>
							<h3>Skill</h3>
							<dl>
								<dt>使用ツール</dt>
								<dd>VScode</dd>
								<dd>Figma</dd>
								<dd>Adobe XD</dd>
								<dd>GitHub(SourceTree)</dd>
								<dd>Backlog</dd>
							</dl>
						</section>
						<section>
							<h3>Like</h3>
							<p>学ぶことが好きです。<br>仕事で使わない内容でも興味があれば、休日に勉強しています。<br>先日セミナーで聞いたAstro.jsに現在は特に興味があり、現在閲覧いただいているサイトをAstro.jsとMicroCMSを初めて使って作りました。<br>GitHubとNetlifyを連携させて公開しております。</p>
						</section>
					</div>
				</div>
			</div>
		</section>
	</main>
</Layout>

<style>
	main {
		font-size: 20px;
		line-height: 1.6;
	}

	.wrapper {
		max-width: 1200px;
		margin-inline: auto;
		padding-inline: 20px;
		container-type: inline-size;
	}
	section {

		&:not(:first-of-type) {
			margin-top: 100px;
		}
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		margin-block: 153px 100px;
		font-size: 4rem;
		line-height: 1;
		text-align: center;
		font-family: 'Libre Baskerville', serif;
		overflow: hidden;

		span {
			display: block;
			animation: txtAnime .5s ease-in-out forwards;
		}
	}

	@keyframes txtAnime {
		0% {
			transform: translateY(100%);
		}
		100% {
			transform: translateY(0);
		}
	}
	.section-code {
		scroll-margin-top: 30px;

		h2 {
			font-size: 60px;
			font-family: 'Libre Baskerville', serif;
		}
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}

	.section-about {
		background-color: #6f6f6f;
		z-index: 100;

		.section-about__container {
			display: flex;

			@container (max-width: 750px) {
				display: block;
			}

			& > div {
				padding-block: 100px;

				@container (min-width: 751px) {
					width: 50%;
				}

				@container (max-width: 750px) {
					padding-block: calc(100 / 710 * 100cqw);
				}
			}
		}

		h2 {
			font-family: 'Libre Baskerville', serif;

			@container (min-width: 751px) {
				position: sticky;
				top: 0;
				width: 50%;
				height: 100svh;
				padding-block: 100px;
				font-size: calc(120 / 1160 * 100cqw);
				line-height: 1.5;
			}

			@container (max-width: 750px) {
				padding-block: calc(100 / 710 * 100cqw) 0;
				font-size: max(calc(120 / 710 * 100cqw), 64px);
				line-height: 1.3;
			}
		}

		section {

			&:not(:first-child) {
				margin-top: 50px;
				border-top: 1px solid;
				padding-top: 50px;
			}

			h3 {
				font-size: 56px;
				margin-bottom: 10px;
			}

			dt {
				font-weight: bold;
			}

			dd {
				margin-top: 5px;
				text-indent: 1em;

				&::before {
					content: "-";
					margin-right: 5px;
				}
			}
		}

		a {
			display: block;
			margin-top: 1em;
			text-decoration: underline;

			&:hover {
				text-decoration: none;
			}
		}
	}

	.js-fadein {
		overflow: hidden;

		span {
			display: block;
			transform: translateY(100%);
		}
	}

	.js-fadein.is-active span {
		animation: txtAnime .5s ease-in-out forwards;
	}

	[data-order="2"] {
		overflow: hidden;

		span {
			display: block;
			transform: translateY(100%);
		}
	}

	.js-fadein.is-active + [data-order="2"] span {
		animation: txtAnime .5s ease-in-out .3s forwards;
	}
</style>

<script>
	window.addEventListener('load', () => {
    'use strict';

    const targetElements = document.querySelectorAll('.js-fadein'),
        addClass = 'is-active',
        options = {
            threshold: 1
        };

    const observer = new IntersectionObserver(showElements, options);

    targetElements.forEach((targetElement) => {
        observer.observe(targetElement);
    });

    function showElements(entries) {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                // 各 .heading に .active を加える
                entry.target.classList.add(addClass);
            }
        });
    }
});
</script>
